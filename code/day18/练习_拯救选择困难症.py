"""
1 练习介绍

练习目标
我们会通过今天的作业，用代码解决生活中实际的一种需求：选择困难，需要帮忙。

练习要求
现今社会，每个人每天的生活都充满了各种各样的选择，导致许多人在选择面前纠结万分。
甚至，有不少人将“早饭吃什么？午饭吃什么？晚饭吃什么？”戏称为人生中的三大难题。
所以，我们今天的练习就会以“不知道吃什么”为例，让电脑来帮我们选，而我们只要做决策就好。
电脑推荐我们吃某种菜，我们拒绝后，它就继续推荐，直到我们满意为止。
"""
"""
1. 步骤讲解
由于选择困难症具体的症状不同，所以，我们需要同时针对不同的情况去一一分析需求，好保证产品的有效性。
假设“不知道吃什么”的主要原因有两种：一是完全不知道要吃什么，二是在几家店之间犹豫。
根据这个假设，明确产品需求：
刚进入产品时要做一个选择，在两个主要原因中选一个。
当完全不知道要吃什么时，需要产品在一些菜品当众随机推荐一个，让我们选要或不要。
当在几家店之间犹豫时，需要告诉电脑是哪几家，然后让电脑推荐一家，我们来做决策。

注：假设你有想到不同的原因，可以自己想一想：要怎么用代码解决。可以在群里和同学分享~
"""
"""
2. 根据生活经验，明确产品需求

为了让产品更好用，我们可以先分析一下问题，将产品需求（即功能）明确一下。
得出产品的三个功能：判断，随机推荐，特定选项中的随机推荐。
"""

"""
3.形成技术方案

明确了需求之后，我们就可以运用学过的知识来定技术方案，可得：

判断： 判断语句+input
随机推荐：random模块+循环+判断
特定选项的随机选项：列表添加+random模块+循环+判断
"""
"""
3. 步骤讲解
判断： 判断语句（二选一）+input（下面两个功能也会用到，不重复写了）
随机推荐：random模块（前提：一个提前设好的菜品列表）+循环（不满意再选）+判断
特定选项的随机选项：列表添加（让我们将自己的选择添加进一个空列表）+random模块+循环+判断
"""
import random
import time

print('欢迎使用:"帮你做选择"小程序!')

menus = ["蒸羊羔", "蒸熊掌", "蒸鹿尾儿", "烧花鸭", "烧雏鸡", "烧子鹅", "卤猪", "卤鸭", "酱鸡", "腊肉", "松花", "小肚儿", "晾肉", "香肠儿", "什锦苏盘", "熏鸡白肚儿",
         "清蒸八宝猪", "江米酿鸭子", "罐儿野鸡", "罐儿鹌鹑", "卤什锦", "卤子鹅", "山鸡", "兔脯", "菜蟒", "银鱼", "清蒸哈什蚂", "烩鸭丝", "烩鸭腰", "烩鸭条", "清拌鸭丝",
         "黄心管儿", "焖白鳝", "焖黄鳝", "豆豉鲇鱼", "锅烧鲤鱼", "锅烧鲇鱼", "清拌甲鱼", "抓炒鲤鱼", "抓炒对虾", "软炸里脊", "软炸鸡", "什锦套肠儿", "卤煮寒鸭儿", "麻酥油卷儿",
         "熘鲜蘑", "熘鱼脯", "熘鱼肚", "熘鱼片儿", "醋熘肉片儿", "烩三鲜", "烩白蘑", "烩鸽子蛋", "炒银丝", "烩鳗鱼", "炒白虾", "炝青蛤", "炒面鱼", "炒竹笋", "芙蓉燕菜",
         "炒虾仁儿", "烩虾仁儿", "烩腰花儿", "烩海参", "炒蹄筋儿", "锅烧海参", "锅烧白菜", "炸木耳", "炒肝尖儿", "桂花翅子", "清蒸翅子", "炸飞禽", "炸汁儿", "炸排骨",
         "清蒸江瑶柱", "糖熘芡仁米", "拌鸡丝", "拌肚丝", "什锦豆腐", "什锦丁儿", "糟鸭", "糟熘鱼片儿", "熘蟹肉", "炒蟹肉", "烩蟹肉", "清拌蟹肉", "蒸南瓜", "酿倭瓜",
         "炒丝瓜", "酿冬瓜", "烟鸭掌儿", "焖鸭掌儿", "焖l笋", "炝茭白", "茄子晒炉肉", "鸭羹", "蟹肉羹", "鸡血汤", "三鲜木樨汤", "红丸子", "白丸子", "南煎丸子", "四喜丸子",
         "三鲜丸子", "氽丸子", "鲜虾丸子", "鱼脯丸子", "饹炸丸子", "豆腐丸子", "樱桃肉", "马牙肉", "米粉肉", "一品肉", "栗子肉", "坛子肉", "红焖肉", "黄焖肉", "酱豆腐肉",
         "晒炉肉", "炖肉", "黏糊肉", "烀肉", "扣肉", "松肉", "罐儿肉", "烧肉", "大肉", "烤肉", "白肉", "红肘子", "白肘子", "熏肘子", "水晶肘子", "蜜蜡肘子",
         "锅烧肘子", "扒肘条", "炖羊肉", "酱羊肉", "烧羊肉", "烤羊肉", "清羔羊肉", "五香羊肉", "氽三样儿", "爆三样儿", "炸卷果儿", "烩散丹", "烩酸燕儿", "烩银丝",
         "烩白杂碎", "氽节子", "烩节子", "炸绣球", "三鲜鱼翅", "栗子鸡", "氽鲤鱼", "酱汁鲫鱼", "活钻鲤鱼", "板鸭", "筒子鸡", "烩脐肚", "烩南荠", "爆肚仁儿", "盐水肘花儿",
         "锅烧猪蹄儿", "拌稂子", "炖吊子", "烧肝尖儿", "烧肥肠儿", "烧心", "烧肺", "烧紫盖儿", "烧连帖", "烧宝盖儿", "油炸肺", "酱瓜丝儿", "山鸡丁儿", "拌海蜇", "龙须菜",
         "炝冬笋", "玉兰片", "烧鸳鸯", "烧鱼头", "烧槟子", "烧百合", "炸豆腐", "炸面筋", "炸软巾", "糖熘饹儿", "拔丝山药", "糖焖莲子", "酿山药", "杏仁儿酪", "小炒螃蟹",
         "氽大甲", "炒荤素儿", "什锦葛仙米", "鳎目鱼", "八代鱼", "海鲫鱼", "黄花鱼", "鲥鱼", "带鱼", "扒海参", "扒燕窝", "扒鸡腿儿", "扒鸡块儿", "扒肉", "扒面筋",
         "扒三样儿", "油泼肉", "酱泼肉", "炒虾黄", "熘蟹黄", "炒子蟹", "炸子蟹", "佛手海参", "炸烹儿", "炒芡子米", "奶汤", "翅子汤", "三丝汤", "熏斑鸠", "卤斑鸠",
         "海白米", "烩腰丁儿", "火烧茨菰", "炸鹿尾儿", "焖鱼头", "拌皮渣儿", "氽肥肠儿", "炸紫盖儿", "鸡丝豆苗", "十二台菜", "汤羊", "鹿肉", "驼峰", "鹿大哈", "插根儿",
         "炸花件儿", "清拌粉皮儿", "炝莴笋", "烹芽韭", "木樨菜", "烹丁香", "烹大肉", "烹白肉", "麻辣野鸡", "烩酸蕾", "熘脊髓", "咸肉丝儿", "白肉丝儿", "荸荠一品锅",
         "素炝春不老", "清焖莲子", "酸黄菜", "烧萝卜", "脂油雪花儿菜", "烩银耳", "炒银枝儿", "八宝榛子酱", "黄鱼锅子", "白菜锅子", "什锦锅子", "汤圆锅子", "菊花锅子",
         "杂烩锅子", "煮饽饽锅子", "肉丁辣酱", "炒肉丝", "炒肉片儿", "烩酸菜", "烩白菜", "烩豌豆", "焖扁豆", "氽毛豆", "炒豇豆", "外加腌苤蓝丝儿"]
while True:
    try:
        choose = int(input("先问个问题; 1:是完全不知道要吃什么,; 2:还是在几家店之间犹豫"))
        break
    except:
        print("只能输入数字,再试一遍")

if choose == 1:
    print("完全不知道吃什么!")
    # 选过的菜就不要再出现
    disabled = []
    while True:
        # 随机选择的一道菜
        dishes = random.choice(menus)
        # 推荐的菜单都没了
        if len(menus) == len(disabled):
            print("{} 道菜都没合您胃口,自己自生自灭吧,再见".format(len(menus)))
            break
        # 如果这个菜之前被选到过，那就重新选一次
        if dishes in disabled:
            continue
        res = input("帮您选择‘{}’,怎么样呢?(1:太棒啦就是它,想再看看的话直接回车)".format(dishes))
        if res == "1":
            print("您选择了‘{}’,果然,英雄所见略同!".format(dishes))
            break
        else:
            # 将重选菜存到一个列表中，避免下次再选到
            disabled.append(disabled)

elif choose == 2:
    print("在几家店之间犹豫？哪几家店呢?说说看?")
    stores = []
    while True:
        store = input("输入第{}家店名:(q:退出)".format(len(stores) + 1))
        if store == 'q':
            print("请稍等,我帮您挑选中...")
            time.sleep(1)
            break
        stores.append(store)
    recommend = random.choice(stores)
    print('给您推荐:{},快去吃吧!'.format(recommend))

time.sleep(1)
print("程序结束")
